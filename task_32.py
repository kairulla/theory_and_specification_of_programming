# Задача 32. Физическая лаборатория
# При проведении физического эксперимента
# по фиксации траектории движения астиц с помощью ЭВМ
# детекторы сгруппированы следующим образом:
# Д Д ... Д
# Д Д ... Д
# ...............
# Д Д ... Д
# Перекрытая детекторами область
# отображается в памяти ЭВМ
# двумерным массивом M[1:N,1:K],
# элементы которого представляют собой
# цифровую фотографию исследуемой области.
# При фиксации элементарной частицы детекторами в позиции (I,J)
# соответствующий элемент матрицы M принимает значение 1,
# в противном случае 0.
# Определите, содержит ли данная цифровая фотография информацию,
# которая может быть интрепретирована как след прямолинейной траектории,
# начинающейся и заканчивающейся за пределами фотографии.

max = 100  # всего сработавших детекторов
class coor:  # координты сработавшего детектора
    def __init__(self):
        self.x = 0
        self.y = 0

b = [coor() for _ in range(max)]
n = 0
i = 0
dx = 0
dy = 0
z = 0
ok = False

def nod(x, y):  # функция возвращает НОД для x,y
    k = 0
    if x < y:
        k = x
        x = y
        y = k
    if x == 0 or y == 0:
        return 1
    else:
        while x % y != 0:
            k = x % y
            x = y
            y = k
        return y

n = int(input('Количество точек...'))
for i in range(1, n + 1):
    print('Координаты точки', i, end=' ')
    b[i].x, b[i].y = map(int, input().split())

dx = b[1].x - b[2].x
dy = b[1].y - b[2].y
z = nod(abs(dx), abs(dy))
dx = dx // z
dy = dy // z
i = 3
ok = True
while ok and i <= n:
    ok = (b[i].x - b[1].x) * dy == (b[i].y - b[1].y) * dx
    i += 1

if ok:
    print('Траектория прямолинейна.')
else:
    print('Траектория не прямолинейна.')
